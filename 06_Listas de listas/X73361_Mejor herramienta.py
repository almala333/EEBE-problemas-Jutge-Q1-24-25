import math
def mejor_herramienta(lmediciones):
    '''
    Parametres
    ----------
    lmediciones: list
        Llista de tuples, on cada tuple conté el nom d'una eina seguit dels seus valors de mesura.

    Retorna
    -------
    str
        El nom de l'eina amb la desviació típica més baixa.

    Tests públics
    -------------
    >>> m = [['herramienta1',1.29708186, 1.31266035, 1.33536083, 1.29651107,
    ...                         1.27489226, 1.31669962, 1.296645  , 1.31999788,
    ...                         1.30039536, 1.28287777, 1.28805435, 1.30090147,
    ...                         1.27151722, 1.26324628, 1.2893031 , 1.30099176,
    ...                         1.29308506, 1.30773716, 1.29497462, 1.29530172],
    ...         ['herramienta2',2.82486964, 2.79124532, 2.80591011, 2.80944679,
    ...                         2.81057422, 2.7981161 , 2.77104033, 2.79758669,
    ...                         2.78554721, 2.80345295, 2.79900319, 2.7846449 ,
    ...                         2.80583578, 2.81153274, 2.80816726, 2.81009209,
    ...                         2.7946134 , 2.7883018 , 2.7968774 , 2.78145684],
    ...         ['herramienta3',1.59912295, 1.60199575, 1.59920467, 1.60108844,
    ...                         1.60497468, 1.59742797, 1.6009022 , 1.59948543,
    ...                         1.60242975, 1.60092409, 1.59868339, 1.59909426,
    ...                         1.59670533, 1.59309514, 1.60266672, 1.59587891,
    ...                         1.59662104, 1.60692734, 1.60238514, 1.60106771],
    ...         ['herramienta4',0.91837844, 0.91031125, 0.87873479, 0.91919775,
    ...                         0.94548981, 0.92281759, 0.87520564, 0.90950628,
    ...                         0.91250966, 0.90622502, 0.90045178, 0.89656651,
    ...                         0.92379851, 0.90519854, 0.87822092, 0.83423747,
    ...                         0.92680545, 0.9184275 , 0.9108524 , 0.88113948],
    ...         ['herramienta5',1.89940911, 1.90002205, 1.89982581, 1.90027163,
    ...                         1.89981981, 1.89991447, 1.89988227, 1.90011783,
    ...                         1.90013265, 1.89962221, 1.90012783, 1.89985387,
    ...                         1.90009801, 1.89989183, 1.89987518, 1.8993762 ,
    ...                         1.89976188, 1.89942767, 1.89992038, 1.89967331],
    ...         ['herramienta6',2.02130853, 1.99060463, 2.01337742, 1.99429791,
    ...                         1.98339322, 1.99800895, 2.0008932 , 2.0228473 ,
    ...                         2.00771829, 2.00002554, 1.99437905, 2.01117355,
    ...                         1.99537268, 2.00808408, 1.99111077, 1.98352936,
    ...                         1.99376165, 1.98541568, 2.00602666, 2.00810295]]
    >>> mejor_herramienta(m)
    'herramienta5'

    Tests privats
    -------------
    >>> mejor_herramienta([('einaA', 5, 5, 5), ('einaB', 10, 10, 10)])
    'einaA'
    >>> mejor_herramienta([('einaX', 1, 2, 3), ('einaY', 4, 5, 6)])
    'einaX'
    >>> mejor_herramienta([('einaC', 1, 2), ('einaD', 2, 3)])
    'einaC'
    >>> mejor_herramienta([('eina1', 10, 12, 11), ('eina2', 20, 22, 21)])
    'eina1'
    '''
    best_tool = None
    lower_deviation = float('inf')
    
    for mesures in lmediciones:
        nombre = mesures[0]
        values = mesures[1:]
        standar_deviation = math.sqrt((sum((x - sum(values) / len(values)) ** 2 for x in values)) / (len(values) - 1))
        if standar_deviation < lower_deviation:
            lower_deviation = standar_deviation
            best_tool = nombre     
    return best_tool

if __name__ == "__main__":
    import doctest
    doctest.testmod(verbose=True)